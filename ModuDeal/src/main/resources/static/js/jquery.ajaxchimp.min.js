(function ($) {
    'use strict';

    // jQuery를 사용하여 코드가 충돌하지 않도록 익명 함수로 래핑합니다.

    $.ajaxChimp = {
        // ajaxChimp 객체를 정의합니다.
        responses: {
            // MailChimp API 응답 메시지와 해당 코드를 정의합니다.
            'We have sent you a confirmation email'                                             : 0,
            'Please enter a valid email'                                                        : 1,
            'An email address must contain a single @'                                          : 2,
            'The domain portion of the email address is invalid (the portion after the @: )'    : 3,
            'The username portion of the email address is invalid (the portion before the @: )' : 4,
            'This email address looks fake or invalid. Please enter a real email address'       : 5
        },
        translations: {
            // 다국어 지원을 위해 번역을 위한 빈 객체를 초기화합니다.
            'en': null
        },
        init: function (selector, options) {
            // 초기화 함수를 정의하고 jQuery 선택자와 옵션을 받아 각 요소에 적용합니다.
            $(selector).ajaxChimp(options);
        }
    };

    $.fn.ajaxChimp = function (options) {
        // jQuery의 프로토타입에 새로운 ajaxChimp 메소드를 추가합니다.
        $(this).each(function(i, elem) {
            // 각 양식 요소에 대해 함수를 실행합니다.
            var form = $(elem);
            var email = form.find('input[type=email]');
            var label = form.find('.info');

            // 설정을 기본 설정과 병합합니다.
            var settings = $.extend({
                'url': form.attr('action'),
                'language': 'en'
            }, options);

            // MailChimp API에 요청을 보내기 위한 URL을 구성합니다.
            var url = settings.url.replace('/post?', '/post-json?').concat('&c=?');

            // HTML5 유효성 검사를 비활성화하고 이메일 입력 필드의 이름을 설정합니다.
            form.attr('novalidate', 'true');
            email.attr('name', 'EMAIL');

            // 양식 제출 시 실행되는 함수를 정의합니다.
            form.submit(function () {
                // 메시지 변수를 초기화합니다.
                var msg;
                // 서버 응답을 처리하는 콜백 함수를 정의합니다.
                function successCallback(resp) {
                    // 서버 응답을 기반으로 메시지를 처리합니다.
                    if (resp.result === 'success') {
                        // 성공 메시지를 설정하고 스타일을 변경합니다.
                        msg = 'We have sent you a confirmation email';
                        label.removeClass('error').addClass('valid');
                        email.removeClass('error').addClass('valid');
                    } else {
                        // 오류 메시지를 처리합니다.
                        email.removeClass('valid').addClass('error');
                        label.removeClass('valid').addClass('error');
                        // 응답 메시지를 분석하여 오류 유형을 확인합니다.
                        var index = -1;
                        try {
                            var parts = resp.msg.split(' - ', 2);
                            if (parts[1] === undefined) {
                                msg = resp.msg;
                            } else {
                                var i = parseInt(parts[0], 10);
                                if (i.toString() === parts[0]) {
                                    index = parts[0];
                                    msg = parts[1];
                                } else {
                                    index = -1;
                                    msg = resp.msg;
                                }
                            }
                        }
                        catch (e) {
                            index = -1;
                            msg = resp.msg;
                        }
                    }

                    // 언어 설정에 따라 메시지를 번역하고 표시합니다.
                    if (
                        settings.language !== 'en'
                        && $.ajaxChimp.responses[msg] !== undefined
                        && $.ajaxChimp.translations
                        && $.ajaxChimp.translations[settings.language]
                        && $.ajaxChimp.translations[settings.language][$.ajaxChimp.responses[msg]]
                    ) {
                        msg = $.ajaxChimp.translations[settings.language][$.ajaxChimp.responses[msg]];
                    }
                    label.html(msg);

                    // 메시지를 표시합니다.
                    label.show(2000);
                    if (settings.callback) {
                        settings.callback(resp);
                    }
                }

                // 양식 데이터를 직렬화하여 서버로 보냅니다.
                var data = {};
                var dataArray = form.serializeArray();
                $.each(dataArray, function (index, item) {
                    data[item.name] = item.value;
                });

                // JSONP를 사용하여 MailChimp API에 요청을 보냅니다.
                $.ajax({
                    url: url,
                    data: data,
                    success: successCallback,
                    dataType: 'jsonp',
                    error: function (resp, text) {
                        // 오류가 발생하면 콘솔에 오류 메시지를 기록합니다.
                        console.log('mailchimp ajax submit error: ' + text);
                    }
                });

                // 제출 메시지를 표시합니다.
                var submitMsg = 'Submitting...';
                if(
                    settings.language !== 'en'
                    && $.ajaxChimp.translations
                    && $.ajaxChimp.translations[settings.language]
                    && $.ajaxChimp.translations[settings.language]['submit']
                ) {
                    submitMsg = $.ajaxChimp.translations[settings.language]['submit'];
                }
                label.html(submitMsg).show(2000);

                // 기본 제출 동작을 중지합니다.
                return false;
            });
        });
        // jQuery 체이닝을 위해 현재 요소를 반환합니다.
        return this;
    };
})(jQuery);